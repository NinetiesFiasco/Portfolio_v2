{"version":3,"sources":["components/global/Header/Header.module.css","components/Menu/Punkt/Punkt.module.css","components/Menu/Menu.module.css","components/Content/About/About.module.css","components/Content/Start/Start.module.css","components/Content/Work/Work.module.css","components/Content/Hobi/Hobi.module.css","components/Content/Contacts/Contacts.module.css","components/Content/About/bg.png","components/Content/Start/bg.jpg","components/Content/Work/bg.jpg","components/Content/Hobi/bg.jpg","components/Menu/Punkt/Punkt.jsx","components/Menu/Menu.jsx","components/Menu/MenuContainer.jsx","components/global/Header/Header.jsx","components/Content/About/About.jsx","components/Content/Start/Start.jsx","components/Content/Work/Work.jsx","components/Content/Hobi/Hobi.jsx","components/Content/Contacts/Contacts.jsx","App.js","serviceWorker.js","redux/menu.js","redux/mainWeb.js","redux/about.js","redux/projects.js","redux/technologies.js","redux/store.js","index.js"],"names":["module","exports","Punkt","duration","offset","activeClass","s","activeLnk","className","defaultLnk","to","this","props","link","smooth","spy","BG","txt","React","Component","Menu","punktsUI","punkts","map","punkt","key","i","length","splice","dash","menu","MenuContainer","connect","state","dispatch","Header","header","colorBlack","text","bgStyle","About","container","style","Start","Work","href","Hobi","createRef","current","minHeight","window","screen","availHeight","ref","Projects","fontStyle","App","name","Contacts","Boolean","location","hostname","match","initialState","reducer","action","type","paragraphs","body","reducers","combineReducers","mainWeb","about","projects","technologies","store","createStore","rerenderEntireTree","ReactDOM","render","StrictMode","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.218abc0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Tg2IK\",\"colorBlack\":\"Header_colorBlack__1oaS8\",\"dash\":\"Header_dash__1jTDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultLnk\":\"Punkt_defaultLnk__1roCi\",\"BG\":\"Punkt_BG__iy9ul\",\"activeLnk\":\"Punkt_activeLnk__1TOmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__1IYxC\",\"dash\":\"Menu_dash__fmY0V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__1LPUc\",\"header\":\"About_header__1ywX6\",\"text\":\"About_text__2_jXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Start_container__1EKao\",\"text\":\"Start_text__2K05s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Work_container__31LAH\",\"text\":\"Work_text__3BleK\",\"header\":\"Work_header__jxgRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hobi_container__NTN0t\",\"header\":\"Hobi_header__2uuHx\",\"text\":\"Hobi_text__PpPnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__3b8P5\",\"text\":\"Contacts_text__3zcij\"};","module.exports = __webpack_public_path__ + \"static/media/bg.514f0937.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.241ecd24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.24cf87e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.80308f22.jpg\";","import React from 'react';\r\nimport s from './Punkt.module.css';\r\nimport {Link} from 'react-scroll';\r\n\r\nclass Punkt extends React.Component {\r\n  \r\n  duration = 750;\r\n  offset = -100;\r\n\r\n  render(){\r\n    return <Link\r\n        activeClass={s.activeLnk}\r\n        className={s.defaultLnk}\r\n        to={this.props.link}\r\n        duration={this.duration} \r\n        smooth={true} \r\n        spy={true}\r\n        offset={this.offset}>\r\n          <div className={s.BG}></div>\r\n          <div>{this.props.txt}</div>\r\n        </Link>\r\n  }\r\n}\r\n\r\nexport default Punkt;","import React from 'react';\r\nimport s from './Menu.module.css';\r\nimport Punkt from './Punkt/Punkt.jsx';\r\n\r\nconst Menu = (props) =>{\r\n  let punktsUI = props.punkts.map((punkt,key)=>{return <Punkt key={key} txt={punkt.txt} link={punkt.link} />});\r\n\r\n  for (var i=punktsUI.length-1;i>0;i--)\r\n    punktsUI.splice(i,0,<div className={s.dash} key={1000-i}>/</div>);\r\n\r\n  return <div className={s.menu}>\r\n    {punktsUI}\r\n  </div>\r\n}\r\n\r\nexport default Menu;","import Menu from './Menu.jsx';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    punkts: state.menu.punkts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {}\r\n}\r\n\r\nconst MenuContainer = connect(mapStateToProps,mapDispatchToProps)(Menu);\r\n\r\nexport default MenuContainer;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nclass Header extends React.Component {\r\n\r\n  render(){\r\n  return <h2 className='bigger'>\r\n      <div className={s.dash}>/</div>\r\n      <span className={s.header+(this.props.colorBlack?' '+s.colorBlack:'')}>{this.props.text}</span>\r\n      <div className={s.dash}>/</div>\r\n    </h2>\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport BG from './bg.png';\r\nimport s from './About.module.css';\r\nimport Header from '../../global/Header/Header';\r\n\r\nconst bgStyle = {\r\n  'backgroundImage': `url(${BG})`,\r\n  'backgroundSize': 'contain',\r\n  'backgroundRepeat':'no-repeat'\r\n};\r\n\r\nconst About = (props) => {\r\n  return <div className={s.container} style={bgStyle}>\r\n    <div className={s.text}>\r\n      <Header text=\"обо мне\"/>\r\n      <p>Образование: Мытищинский филиал МГТУ им. Н. Э. Баумана (бывший МГУЛ) Факультет: Электроники и системотехники</p>\r\n      <p>Со школы начал обучаться программированию</p>\r\n      <p>Получил высшее образование на кафедре прикладной математики</p>\r\n      <p>После завершения бакалавриата начал работать программистом</p>\r\n      <p>Спустя год устроился в ООО «Стильные кухни»<br/>разрабатывать систему ERP</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport BG from './bg.jpg';\r\nimport s from './Start.module.css';\r\n\r\nconst bgStyle = {\r\n  'backgroundImage': `url(${BG})`,\r\n  'backgroundSize': 'contain',\r\n  'backgroundRepeat':'no-repeat',\r\n  'boxShadow': '0px 25px 54px -11px rgba(0,0,0,0.75);'\r\n};\r\n\r\nconst Start = (props) => {\r\n  return <div className={s.container} style={bgStyle}>\r\n    <div className={s.text+' little'}>\r\n      <h1 className='medium'>Середин Антон Андреевич</h1>\r\n      <p>FullStack разработчик</p>\r\n      <p>React & Redux</p>\r\n      <p>C# / NodeJS</p>\r\n      <p>TSQL MySQL<br/>MongoDB Redis</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Start;","import React from 'react';\r\nimport BG from './bg.jpg';\r\nimport s from './Work.module.css';\r\nimport Header from '../../global/Header/Header';\r\n\r\nconst bgStyle = {\r\n  'backgroundImage': `url(${BG})`,\r\n  'backgroundSize': 'contain',\r\n  'backgroundRepeat':'no-repeat'\r\n};\r\n\r\nconst Work = (props) => {\r\n  return <div className={s.container} style={bgStyle}> \r\n    <div className={s.text+ ' medium'}>\r\n      <Header text=\"работа\"></Header>      \r\n      <p>ERP система</p>\r\n      <p>Автоматизация документооборота</p>\r\n      <p>Сервисы на основе Yandex карт</p>\r\n      <p>Разработка статистических сервисов<br/>оптимизация SQL запросов</p>\r\n      <p>Чаты Email SMS<br/> Напоминания, графики работы</p>\r\n      <p>Обучение новых сотрудников</p>\r\n      <p><a href=\"https://drive.google.com/file/d/1eZp_V4vAs0orlO8z0NOOavNiqgiYEwLl/view?usp=sharing\">Подробное резюме DOCX</a></p>  \r\n    </div>   \r\n  </div>\r\n}\r\n\r\nexport default Work;\r\n","import React from 'react';\r\nimport BG from './bg.jpg';\r\nimport s from './Hobi.module.css';\r\nimport Header from '../../global/Header/Header';\r\n\r\nconst bgStyle = {\r\n  'backgroundImage': `url(${BG})`,\r\n  'backgroundSize': 'contain',\r\n  'backgroundRepeat':'no-repeat'\r\n};\r\n\r\nclass Hobi extends React.Component {\r\n\r\n  container = React.createRef();\r\n\r\n\r\n  componentDidMount(){\r\n    this.container.current.style.minHeight= window.screen.availHeight + 'px';    \r\n  }\r\n\r\n  render() {\r\n    return <div className={s.container} style={bgStyle} ref={this.container}>\r\n      <div className={s.text}>\r\n        <Header text=\"хоби\"></Header>\r\n        <p>плавание,</p>\r\n        <p>бег, акробатика,</p>\r\n        <p>скейтборд, сноуборд, кайт.</p>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Hobi;","import React from 'react';\r\nimport s from './Contacts.module.css';\r\nimport Header from '../../global/Header/Header';\r\n\r\n\r\nclass Projects extends React.Component {\r\n\r\n  render(){\r\n  return <div className={s.container}>\r\n    <div className={s.text}>\r\n      <Header text=\"контакты\" colorBlack={true}/>\r\n      <p><a href='mailto:seredin.anton2014@gmail.com'>seredin.anton2014@gmail.com</a></p>\r\n      <p><a href='https://teleg.run/ASeredin'>Telegram</a></p>\r\n      <p><a href='https://github.com/NinetiesFiasco'>GitHub</a></p>\r\n      <p><a href='https://vk.com/fermavtoistorone'>VK</a></p>\r\n    </div>\r\n  </div>\r\n  }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './App.css';\r\nimport Menu from './components/Menu/MenuContainer.jsx';\r\nimport About from './components/Content/About/About.jsx';\r\nimport Start from './components/Content/Start/Start.jsx';\r\nimport Work from './components/Content/Work/Work.jsx';\r\nimport Hobi from './components/Content/Hobi/Hobi.jsx';\r\nimport Contacts from './components/Content/Contacts/Contacts.jsx';\r\nimport { Element } from 'react-scroll'\r\n\r\nconst fontStyle = {\r\n\r\n}\r\n\r\nfunction App() {\r\n  return (<div className={\"globContainer\"} style={fontStyle}>\r\n    <Menu/>\r\n    <Element name=\"start\"><Start/></Element>\r\n    <Element name=\"about\"><About/></Element>\r\n    <Element name=\"work\"><Work/></Element>\r\n    <Element name=\"contacts\"><Contacts/></Element>\r\n    <Element name=\"hobi\"><Hobi/></Element>\r\n  </div>);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {\r\n  punkts: [\r\n    {txt:\"старт\"          ,link:\"start\"},\r\n    {txt:\"обо мне\"        ,link:\"about\"},\r\n    {txt:\"работа\"         ,link:\"work\"},\r\n    {txt:\"контакты\"       ,link:\"contacts\"},\r\n    {txt:\"хоби\"           ,link:\"hobi\"}\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n  switch (action.type){\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","let initialState = {\r\n  paragraphs: [\r\n    {\r\n        header:\"Параграф 1\",\r\n        body: [\"Текст 1\",\"Текст 2\",\"Текст 3\",\"Текст 4\",]\r\n    },{\r\n      header:\"Параграф 2\",\r\n      body: [\"Текст 4\",\"Текст 3\",\"Текст 2\",\"Текст 1\",]\r\n    },{\r\n      header:\"Параграф 3\",\r\n      body: [\r\n        \"Текст 4\",\"Текст 3\",\"Текст 2\",\"Текст 1\",\r\n        \"Текст 5\",\"Текст 6\",\"Текст 7\",\"Текст 8\",\r\n      ]    \r\n    },{      \r\n      header:\"Параграф 4\",\r\n      body: [\"Текст 11\",\"Текст 22\",\"Текст 33\"]      \r\n    }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n  switch (action.type){\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","let initialState = {\r\n  paragraphs: [\r\n    {\r\n        header:\"Здравствуйте!\",\r\n        body: [\r\n          \"Меня зовут Антон, рад приветствовать вас на своей странице.\",\r\n          \"Я являюсь fullstack разработчиком.\"]\r\n    },{\r\n      header:\"Стек технологий\",\r\n      body: [\r\n        \"C#, ASP.NET WebForms, PHP, NodeJS\",\r\n        \"SQL (TransactSQL,MySQL,SQLite), MongoDB, Redis\",\r\n        \"JavaScript, ReactJS, Redux, Yandex maps, jQuery\",\r\n        \"CSS HTML\",\r\n        \"GIT\",\r\n        \"Windows, VS Code, настраивал VDS на Linux (Ubuntu) с NodeJS MongoDB и Redis \"\r\n      ]\r\n    },{\r\n      header:\"Образование\",\r\n      body: [\r\n        \"Мытищинский филиал МГТУ им. Н. Э. Баумана (бывший МГУЛ)\",\r\n        \"Факультет: Электроники и системотехники\"\r\n      ]    \r\n    },{      \r\n      header:\"Как я стал программистом\",\r\n      body: [\r\n        `В 10-м классе точно решил что отучусь на программиста. \r\nБыл предрасположен к точным наукам, любил учиться.\r\nДаже занял призовое место в районной олимпиаде по программированию, на тот момент нас учили писать разную мелочовку на QBasic. `,\r\n        `За первые годы университета меня познакомили с разными языками (Fortran, Delphi,* C++, C# и даже немного Assembler), \r\nТакой подход к обучению хоть и дал некоторый кругозор, но скорее запутал на первых порах.`,\r\n        `К концу 3-го курса бакалавриата начал искать работу. Наткнулся на стартап, где искали новичков в команду и после обучения обещали работу.\r\nТам получил хорошие знания по HTML, CSS и JavaScript написал для себя библиотеку по этим направлениям, разработал свой календарик, конструктор меню, \r\nэмулятор рабочего стола (С возможностью открывать окна, кликом правой кнопкой мыши, пуском, внедрил туда разработанный ранее календарь и сделал просмотр картинок), \r\nодной из последних задач была разработка ИИ (для решения задачи на подобии задачи Коми Вояжора, кратчайший обход 3000 точек в Москве с использованием Yandex карт).\r\nОбучение затянулось, работы не было и в итоге команда разошлась.`,\r\n        `Первый опыт коммерческой разработки мне подарил родственник, ему нужен был сайт для агенства недвижимости, я написал его на чистом PHP и JavaScript,\r\nсам продумал систему авторизации, разработал базу данных, написал требуемые запросы, организовал систему хранения и сжатия изображений, создал свой слайдер картинок и админку.\r\nЭтот опыт позволил мне устроиться на первую работу в ООО \"Стильные кухни\".`]\r\n    }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n  switch (action.type){\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","let initialState = {\r\n  paragraphs: [\r\n    {\r\n        header:\"Первый коммерческий проект\",\r\n        body: [\r\n          \"Разработка сайта для агентства недвижимости\",\r\n          \"PHP MySQL JS HTML CSS\",\r\n          `Был куплен хост на hts.ru, разработана база данных на MySQL, написан бэк на PHP, продуманы системы авторизации, роутинга, хранения картинок, обращения к базе данных,\r\nразработан дизайн страницы, осуществлена вёрстка, написана админка. Сайт написан без использования CMS и библиотек, скрипты отлажены под все браузеры включая IE8.\r\nВ дальнейшем была подключёна библиотека jQuery и заказн профессиональный дизайн.`,\r\n        ]\r\n    },{\r\n      header:\"Автоматизация документооборота\",\r\n      body: [\r\n`Были разработаны 5 типов договоров (для разных регионов, типов продаваемых товаров и услуг, договор о намерениях), а также множество бланков заявлений, паспортов товаров, счетов.`,\r\n`C#, ASP.NET WebForms, JavaScript, HTML, CSS, Word, PDF `,\r\n`Реализация электронного документаоборота позволила ускорить работу заинтересованных отделов производства. \r\nТехнологи, экономисты и др. получили удалённый доступ к действующим документам, также была продумана система хранения истории изменений в договорах.`,\r\n`Расширена система CRM для расширенного сбора данных о клиенте`,\r\n`Был разработан конструктор договоров, позволяющий юристам удалённо редактировать пункты и подпункты в них, что исключило частые обращения в IT отдел.`,\r\n`Были разработаны бланки заявлений в формате docx (Microsoft Word), что позволяло оператору получить полный доступ к редактированию документа, в который автоматически заносилась\r\nинформация о торговой точке, продавце и клиенте выбранного заказа`\r\n      ]\r\n    },{\r\n      header:\"Внедрение Yandex карт в производственный процесс\",\r\n      body: [\r\n        \"C# ASP.NET WebForms TSQL JS jQuery\",\r\n        \"Расширение системы CRM для выбора координат по адресу клиента. И дальнейшая передача их в отделы (замеры, установка, доставка).\",\r\n        `Расчёт расположения точки отностельно МКАД, 1-го и 2-го бетонных колец, КАД для Санкт Питербурга и растояния в КМ от точки до указанных кольцевых автодорог.\r\nВ дальнейшем, на основании полученных данных, был автоматизирован расчёт стоимости замера, установки и доставки. `,\r\n        `Был разработан конструктор полигонов, каждый полигон определял географическую территорию для установленного сотрудника, \r\nбыла возможность распределять полигоны между сотрудниками, добавлять одному сотруднику несколько полигонов (на момент отпуска или болезни его коллеги),\r\nв итоге получилось распределять заказы между сотрудниками по географическому признаку `,\r\n        `Так же на основе Yandex карт был разработан отчёт позволяющий отображать на карте клиентов выбраных торговых точек,\r\nклиентов принадлежащих определённой географической зоне, расположение торговых точек, расположение рекламных объектов (что позволило наглядней наблюдать конверсию от рекламы),\r\nа также получать подробную информацию об определённом заказе с карты при клике на нём.`,\r\n        `Была реализована логистическая задача объединения заказов по объёму и географическому положению для оптимальной загрузки газелей на день доставки, с выдачей путевых листов.\r\n(В дальнейшом задача была делигирована на аутсорс).`\r\n      ]    \r\n    },{      \r\n      header:\"Оптимизация работы SQL Server\",\r\n      body: [\r\n        \"TSQL C# IIS\",\r\n        `В большинстве своём работа по оптимизаци заключалась в исправлении типовых ошибок: настройка индексации и первичных ключей,\r\nприведение таблиц в 1-ой или 2-ой нормальной форме, замене вложенных запросов на требуемые JOIN блоки, отслеживании потери индекса в запросе,\r\nпросто логической переработке запроса.`,\r\n        \"Результами работы стали многочисленные статистические сервисы выдающие результаты за выбранный период или по определённым критериям в реальном времени\",\r\n        \"Производил автоматизацию запроса из 1С к SQL Server с множественными временными таблицами\",\r\n        \"Ипользовал XPath запросы для связи таблиц с данными в формате XML\",\r\n        \"Разрабатывал архитектуру базы данных для системы ERP\",\r\n        \"Вывод в кэш IIS сервера результатов авторизации позволил в десятки раз снизить нагрузку на SQL Server \",\r\n        \"Занимался распределением больших объёмов данных в базе, что помогло снизить время ежечасного бэкапа пользовательских данных с 10-20 минут до 1-ой\",\r\n        \"Писал агрегирующую функцию для SQL Server которая конкатенировала строки при группировке, создавал необходимые триггеры, скалярные функции и процедуры\",\r\n        \"Занимался отловом и дальнейшей оптимизацией ресурсоёмких запросов при помощи Монитора Активности SSMS\"\r\n      ]      \r\n    },{\r\n      header:\"Развитие взаимодействия между сотрудниками\",\r\n      body: [\r\n        \"C# ASP.NET WebForms TSQL JavaScript\",\r\n        `Организация сервисов SMS и Email рассылок. Пакетная обработка заказов позволила снизить нагрузку с операторов call центра. Также отправка шаблонных писем позволила\r\nнаполнять их данными из БД и исключила человеские ошибки`,\r\n        `Автоматизация генерации задач для Pyrus, позволила создавать задачу для Pyrus, отправлять Email и сохранять в БД информацию через единный сервис, что исключило \r\nповторные действия оператора, и улучшило взаимосвязь между отделами и контроль за работой сотрудников.`,\r\n        `Были разработаны сервисы позволяющие вести переписку с сотрудниками, создавать напоминания, оставлять комментарии в различных частях работы,\r\nавтоматически уведомлять о дедлайнах.`,\r\n      ]\r\n    },{\r\n      header:\"Обучение сотрудников\",\r\n      body: [\r\n        \"Под моим руководством был разработаны:\",\r\n        `График работы для сотрудников компании, возможностью выбирать отдел, нужную дату устанавливать время работы, смену, прогулы, отпуска, больничные.\r\nА также анализировать кол-во работающих сотрудников на день, и кол-во отработанных часов в месяц`,\r\n        `Сервис разработки руководств, была проработана архитектура приложения, список руководств с возможностью редактирования,\r\nвсе руководства представляли из себя древовидную структуру HTML страниц, каждая из которых могла редактироваться при помощи Web редактора tinymce.`,\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n  switch (action.type){\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","let initialState = {\r\n  paragraphs: [\r\n    {header:\"Windows\",body: [\"Да умею\"]},\r\n    {header:\"Linux (Ubuntu)\",body: [\"Да умею\"]},\r\n    {header:\"Visual Studio Code, SSMS, Nodepad++\",body: [\"Да умею\"]},\r\n    {header:\"Apache, IIS, NodeJS\",body: [\"Да умею\"]},\r\n    {header:\"Express\",body: [\"Да умею\"]},\r\n    {header:\"ReactJS,Redux\",body: [\"Да умею\"]},\r\n    {header:\"JS,CSS,HTML\",body: [\"Да умею\"]},\r\n    {header:\"jQuery\",body: [\"Да умею\"]},\r\n    {header:\"C#\",body: [\"Да умею\"]},\r\n    {header:\"TSQL, MySQL, SQLite\",body: [\"Да умею\"]},\r\n    {header:\"MongoDB\",body: [\"Да умею\"]},\r\n    {header:\"Redis\",body: [\"Да умею\"]}\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n  switch (action.type){\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {createStore, combineReducers} from 'redux';\r\nimport menu from './menu.js';\r\nimport mainWeb from './mainWeb.js';\r\nimport about from './about.js';\r\nimport projects from './projects.js';\r\nimport technologies from './technologies.js';\r\n\r\nlet reducers = combineReducers({\r\n  menu:menu,\r\n  mainWeb: mainWeb,\r\n  about: about,\r\n  projects: projects,\r\n  technologies: technologies\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store.js';\r\nimport {Provider} from 'react-redux';\r\n\r\nlet rerenderEntireTree = () =>{\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n};\r\n\r\nrerenderEntireTree(store.getState());\r\n\r\nstore.subscribe(()=>{\r\n  rerenderEntireTree(store.getState());\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}